/**
 * Microsoft Bot Connector API - v3.0
 * The Bot Connector REST API allows your bot to send and receive messages to channels configured in the  [Bot Framework Developer Portal](https://dev.botframework.com). The Connector service uses industry-standard REST  and JSON over HTTPS.    Client libraries for this REST API are available. See below for a list.    Many bots will use both the Bot Connector REST API and the associated [Bot State REST API](/en-us/restapi/state). The  Bot State REST API allows a bot to store and retrieve state associated with users and conversations.    Authentication for both the Bot Connector and Bot State REST APIs is accomplished with JWT Bearer tokens, and is  described in detail in the [Connector Authentication](/en-us/restapi/authentication) document.    # Client Libraries for the Bot Connector REST API    * [Bot Builder for C#](/en-us/csharp/builder/sdkreference/)  * [Bot Builder for Node.js](/en-us/node/builder/overview/)  * Generate your own from the [Connector API Swagger file](https://raw.githubusercontent.com/Microsoft/BotBuilder/master/CSharp/Library/Microsoft.Bot.Connector.Shared/Swagger/ConnectorAPI.json)    Â© 2016 Microsoft
 *
 * The version of the OpenAPI document: v3
 * Contact: botframework@microsoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PaymentDetailsModifier } from './paymentDetailsModifier';
import { PaymentItem } from './paymentItem';
import { PaymentShippingOption } from './paymentShippingOption';

/**
* Provides information about the requested transaction
*/
export class PaymentDetails {
    'total'?: PaymentItem;
    /**
    * Contains line items for the payment request that the user agent may display
    */
    'displayItems'?: Array<PaymentItem>;
    /**
    * A sequence containing the different shipping options for the user to choose from
    */
    'shippingOptions'?: Array<PaymentShippingOption>;
    /**
    * Contains modifiers for particular payment method identifiers
    */
    'modifiers'?: Array<PaymentDetailsModifier>;
    /**
    * Error description
    */
    'error'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "total",
            "baseName": "total",
            "type": "PaymentItem"
        },
        {
            "name": "displayItems",
            "baseName": "displayItems",
            "type": "Array<PaymentItem>"
        },
        {
            "name": "shippingOptions",
            "baseName": "shippingOptions",
            "type": "Array<PaymentShippingOption>"
        },
        {
            "name": "modifiers",
            "baseName": "modifiers",
            "type": "Array<PaymentDetailsModifier>"
        },
        {
            "name": "error",
            "baseName": "error",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return PaymentDetails.attributeTypeMap;
    }
}

