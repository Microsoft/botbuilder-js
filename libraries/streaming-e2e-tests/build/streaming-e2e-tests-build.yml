# Ensure BotFramework-Streaming library works in the browser 
# by running tests after deploying a streaming-enabled JS Echo Bot 
# and hosting a React App that uses latest streaming bits in DLJS and WebChat 4.9.2.

name: $(Build.BuildId)
trigger: none
pr: none

pool:
  vmImage: 'windows-2019'

variables:
  RootReactPiecesDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/react-app'
  ReactProjectDir: '$(RootReactPiecesDir)/react-app'
  # TODO - Delete Dummy
  DummyReactAppDir: '$(RootReactPiecesDir)/dummy-app'
  DLJSDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/react-app/BotFramework-DirectLineJS'
  BotBuilder: 'botbuilder'
  BfStreaming: 'botframework-streaming'
  TestsDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/tests'
  runCodesignValidationInjection: false
  # Variables defined in Azure:
  # BotName, ConnectedServiceNameARM, MyGetPersonalAccessToken, ReactAppService, ResourceGroup

stages:
  - stage: Prepare_Bot_And_React_App
    jobs:
      - job: Deploy_Bot
        variables:
          TargetProjectDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/bot'
          PackageName: $(BotBuilder)
        steps:
          - template: configure-to-bbjs-daily.yml
          - template: deploy-bot.yml
          
      - job: Prep_React_App
        variables:
          PackageName: 'botframework-streaming'
          TargetProjectDir: $(DLJSDir)
        steps:
          - template: create-react-app.yml

      - job: Customize_DLJS
        variables:
          PackageName: 'botframework-streaming'
          TargetProjectDir: $(DLJSDir)
        steps:
          - template: customize-dljs.yml

      - job: Run_Tests
        dependsOn: 
          - Prep_React_App
          - Customize_DLJS
        condition: succeeded()
        variables:
          REACT_APP_BOT_HOSTNAME: $(BotName)
          PORT: 3000
        steps:
          - template: use-custom-dljs-in-webchat.yml
          - template: run-tests.yml