# Ensure BotFramework-Streaming library works in the browser 
# by running tests after deploying a streaming-enabled JS Echo Bot 
# and a React App that uses latest streaming bits in DLJS and WebChat.

name: $(Build.BuildId)
trigger: none
pr: none

pool:
  vmImage: 'windows-2019'

variables:
  RootReactPiecesDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/react-app'
  ReactProjectDir: '$(RootReactPiecesDir)/react-app'
  DLJSDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/react-app/BotFramework-DirectLineJS'
  BotBuilder: 'botbuilder'
  BfStreaming: 'botframework-streaming'
  TestsDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/tests'
  runCodesignValidationInjection: false
  # Variables defined in Azure:
  # BotName, ConnectedServiceNameARM, MyGetPersonalAccessToken, ReactAppService, ResourceGroup

stages:
  - stage: Prepare_Bot_And_React_App
    jobs:
      # - job: Deploy_Bot
      #   variables:
      #     TargetProjectDir: '$(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/bot'
      #     PackageName: $(BotBuilder)
      #   steps:
      #     - template: configure-to-bbjs-daily.yml
      #     - template: deploy-bot.yml

      - job: Create_React_App
        variables:
          PackageName: 'botframework-streaming'
          TargetProjectDir: $(DLJSDir)
          REACT_APP_BOT_HOSTNAME: $(BotName)
        steps: 
          - powershell: ps
            displayName: 'ps before create-react-app.yml'
          - template: create-react-app.yml
      
      - job: Run_Tests
      # TODO INCLUDE DEPLOY_BOT
        dependsOn: Create_React_App
        condition: succeeded()
        steps:
          - template: run-tests.yml

  # - stage: Run_Tests
  #   dependsOn: Prepare_Bot_And_React_App
  #   condition: succeeded()
  #   jobs:
  #     - template: run-tests.yml
          
