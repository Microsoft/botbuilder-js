# jobs:
#   - job: Run_Tests
    steps:
      - powershell: ps
        displayName: 'ps top of run-tests.yml'

      - powershell: npm install
        displayName: 'npm install in tests directory'
        workingDirectory: $(TestsDir)
      
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: ReactApp2
          path: $(ReactProjectDir)
      
      - task: Cache@2
        displayName: Cache npm
        inputs:
          key: 'WebChatCache | npm | "$(Agent.OS)"'
          path: $(ReactProjectDir)/node_modules
          cacheHitVar: 'CacheRestored'

      - powershell: yarn add botframework-webchat@4.9.2
        displayName: 'yarn add botframework-webchat@4.9.2'
        condition: ne(variables.CacheRestored, 'true')
        workingDirectory: $(ReactProjectDir)
      
      # - powershell: yarn add $(DLJSDir)/botframework-directlinejs.tgz
      - powershell: yarn add botframework-directlinejs
        displayName: 'yarn add botframework-directlinejs.tgz'
        workingDirectory: $(ReactProjectDir)
      
      - powershell: ls $(ReactProjectDir)/node_modules/bot*
        displayName: 'Show react-app node modules that start with bot'
        workingDirectory: $(ReactProjectDir)
      
      - powershell: type $(ReactProjectDir)/package.json
        displayName: type react-app/package.json
        workingDirectory: $(ReactProjectDir)

      - powershell: start powershell {npm start}
        displayName: 'Serve react-app (npm start), opening new console'
        workingDirectory: $(ReactProjectDir)
      
      - powershell: ps -Name powershell
        displayName: get powershell processes after starting react app
      
      # - powershell: npm install
      #   displayName: 'npm install in tests directory'
      #   workingDirectory: $(TestsDir)

      - powershell: Start-Sleep -Seconds 60;
        displayName: 'Allowing react-app to serve. Sleeping 60 seconds'

      - powershell: npm test
        displayName: 'Run Tests: npm test'
        workingDirectory: $(TestsDir)

      # - task: PowerShell@2
      #   displayName: 'Serve React App and Run Tests'
      #   inputs:
      #     targetType: 'filePath'
      #     filePath: $(System.DefaultWorkingDirectory)/libraries/streaming-e2e-tests/build/run-react-app-and-tests.ps1
      #     arguments:
      #       -ReactProjectDir $(ReactProjectDir)
      #       -TestsDir $(TestsDir)


      # INLINE
      # - powershell: | 
      #     Write-Host "Starting react app on $(ReactProjectDir)"
      #     Set-Location -Path "$(ReactProjectDir)"
      #     start powershell {npx react-scripts start}

      #     Write-Host "Sleep on start"
      #     Start-Sleep -Seconds 90

      #     Write-Host "Get processes"
      #     ps -Name powershell
          
      #     Write-Host "Setting location to $(TestsDir)"
      #     Set-Location -Path "$(TestsDir)"

      #     Write-Host "npm install in tests directory"
      #     npm install

      #     Write-Host "npm test"
      #     npm test
      #   displayName: 'Serve react-app (npm start), opening new console'