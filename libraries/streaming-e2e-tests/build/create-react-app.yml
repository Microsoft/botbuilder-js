# Create a React app that uses ReactWebChat and a customized DirectLineJS
# that uses that latest version of botframework-streaming

steps:
  - task: Cache@2
    displayName: 'Cache create-react-app + WebChat Dependencies'
    inputs:
      key: 'CraAndWebChatCache | npm | "$(Agent.OS)"'
      path: $(ReactProjectDir)/node_modules
      cacheHitVar: 'CacheRestored'
  
  - powershell: npm install
    displayName: npm install in React App
    condition: ne(variables.CacheRestored, 'true')
    workingDirectory: $(ReactProjectDir)

# After restoring cache, npm install react-scripts@latest

  # Create Customized DLJS
  - template: customize-dljs.yml
  
  - powershell: npm install $(DLJSDir)/botframework-directlinejs.tgz
    displayName: 'npm install botframework-directlinejs.tgz'
    workingDirectory: $(ReactProjectDir)
  
  - powershell: |
      Rename-Item ./botframework-directlinejs botframework-directlinejs.old
      Rename-Item ./botframework-streaming botframework-streaming.old
      ls
    displayName: Rename DLJS node module
    workingDirectory: $(ReactProjectDir)/node_modules/botframework-webchat/node_modules
  
  # Make BOT_HOSTNAME available to deployed react app
  - powershell: |
      type .env
      $envContent = Get-Content -Raw .env
      $envContent -replace "REACT_APP_BOT_HOSTNAME=", "REACT_APP_BOT_HOSTNAME=$(BotName)" |
        Set-Content -Path .env
      
      Get-Content .env
    displayName: Add "REACT_APP_BOT_HOSTNAME=$(BotName) to .env"
    workingDirectory: $(ReactProjectDir)

  - powershell: npm run build
    displayName: Build React App
    workingDirectory: $(ReactProjectDir)
  
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Artifact: ReactApp'
    inputs:
      targetPath: $(ReactProjectDir)/build
      artifactName: 'ReactApp'

  # - powershell: |
  #     Write-Host "Compressing projecting into react-app.zip"
  #     Compress-Archive "$(ReactProjectDir)/build/*" "$(ReactProjectDir)/react-app.zip" 
  #   displayName: 'Zip react-app'

  # - task: AzureCLI@1
  #   displayName: 'Deploy react-app'
  #   inputs:
  #     ConnectedServiceNameARM: $(ConnectedServiceNameARM)
  #     scriptType: ps
  #     scriptLocation: inlineScript
  #     inlineScript: az webapp deployment source config-zip --resource-group "$(ResourceGroup)" --name "ash-react-app" --src "$(ReactProjectDir)/react-app.zip"
