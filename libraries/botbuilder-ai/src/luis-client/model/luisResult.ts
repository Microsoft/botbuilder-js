/**
 * @module botbuilder-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
/**
 * NOTE: This class was auto generated by OpenAPI Generator (https://openapi-generator.tech)
 * and was manually modified to make it compliant with the current implementation of the library.
 */

import { CompositeEntityModel } from './compositeEntityModel';
import { EntityModel } from './entityModel';
import { IntentModel } from './intentModel';
import { Sentiment } from './sentiment';

export interface LuisResult {
    /**
    * The input utterance that was analyzed.
    */
    query?: string;
    /**
    * The corrected utterance (when spell checking was enabled).
    */
    alteredQuery?: string;
    topScoringIntent?: IntentModel;
    /**
    * All the intents (and their score) that were detected from utterance.
    */
    intents?: Array<IntentModel>;
    /**
    * The entities extracted from the utterance.
    */
    entities?: Array<EntityModel>;
    /**
    * The composite entities extracted from the utterance.
    */
    compositeEntities?: Array<CompositeEntityModel>;
    sentimentAnalysis?: Sentiment;
    connectedServiceResult?: LuisResult;
}

export class LuisResult {
    /**
    * The input utterance that was analyzed.
    */
    'query'?: string;
    /**
    * The corrected utterance (when spell checking was enabled).
    */
    'alteredQuery'?: string;
    'topScoringIntent'?: IntentModel;
    /**
    * All the intents (and their score) that were detected from utterance.
    */
    'intents'?: Array<IntentModel>;
    /**
    * The entities extracted from the utterance.
    */
    'entities'?: Array<EntityModel>;
    /**
    * The composite entities extracted from the utterance.
    */
    'compositeEntities'?: Array<CompositeEntityModel>;
    'sentimentAnalysis'?: Sentiment;
    'connectedServiceResult'?: LuisResult;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            'name': 'query',
            'baseName': 'query',
            'type': 'string'
        },
        {
            'name': 'alteredQuery',
            'baseName': 'alteredQuery',
            'type': 'string'
        },
        {
            'name': 'topScoringIntent',
            'baseName': 'topScoringIntent',
            'type': 'IntentModel'
        },
        {
            'name': 'intents',
            'baseName': 'intents',
            'type': 'Array<IntentModel>'
        },
        {
            'name': 'entities',
            'baseName': 'entities',
            'type': 'Array<EntityModel>'
        },
        {
            'name': 'compositeEntities',
            'baseName': 'compositeEntities',
            'type': 'Array<CompositeEntityModel>'
        },
        {
            'name': 'sentimentAnalysis',
            'baseName': 'sentimentAnalysis',
            'type': 'Sentiment'
        },
        {
            'name': 'connectedServiceResult',
            'baseName': 'connectedServiceResult',
            'type': 'LuisResult'
        }    ];

    static getAttributeTypeMap() {
        return LuisResult.attributeTypeMap;
    }
}
