/**
 * @module botbuilder-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
/**
 * NOTE: This class was auto generated by OpenAPI Generator (https://openapi-generator.tech)
 * and was manually modified to make it compliant with the current implementation of the library.
 */

export interface EntityModel {
    /**
    * Name of the entity, as defined in LUIS.
    */
    entity: string;
    /**
    * Type of the entity, as defined in LUIS.
    */
    type: string;
    /**
    * The position of the first character of the matched entity within the utterance.
    */
    startIndex: number;
    /**
    * The position of the last character of the matched entity within the utterance.
    */
    endIndex: number;
    /**
    * Resolution values for pre-built LUIS entities.
    */
    resolution: any;
    /**
    * Associated prediction score for the intent (float).
    */
    score: number;

    [property: string]: any;
}

export class EntityModel {
    /**
    * Name of the entity, as defined in LUIS.
    */
    'entity': string;
    /**
    * Type of the entity, as defined in LUIS.
    */
    'type': string;
    /**
    * The position of the first character of the matched entity within the utterance.
    */
    'startIndex': number;
    /**
    * The position of the last character of the matched entity within the utterance.
    */
    'endIndex': number;
    /**
    * Resolution values for pre-built LUIS entities.
    */
   'resolution': any;
    /**
    * Associated prediction score for the intent (float).
    */
   'score': number;

   'role': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            'name': 'entity',
            'baseName': 'entity',
            'type': 'string'
        },
        {
            'name': 'type',
            'baseName': 'type',
            'type': 'string'
        },
        {
            'name': 'startIndex',
            'baseName': 'startIndex',
            'type': 'number'
        },
        {
            'name': 'endIndex',
            'baseName': 'endIndex',
            'type': 'number'
        },
        {
            'name': 'resolution',
            'baseName': 'resolution',
            'type': 'object'
        },
        {
            'name': 'score',
            'baseName': 'score',
            'type': 'number'
        },
        {
            'name': 'role',
            'baseName': 'role',
            'type': 'string'
        }    ];

    static getAttributeTypeMap() {
        return EntityModel.attributeTypeMap;
    }
}
